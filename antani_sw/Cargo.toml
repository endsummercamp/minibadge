[package]
edition = "2021"
name = "antani_sw"
version = "0.1.0"
license = "GPL-3.0-or-later"

[build-dependencies]
capnpc = "0.19.0"


[dependencies]
embassy-embedded-hal = { version = "0.2.0", git = "https://github.com/embassy-rs/embassy.git", features = ["defmt"] }
embassy-sync = { version = "0.6.0", git = "https://github.com/embassy-rs/embassy.git", features = ["defmt"] }
#embassy-executor = { version = "0.6.0", git = "https://github.com/embassy-rs/embassy.git", features = ["task-arena-size-98304", "arch-cortex-m", "executor-thread", "executor-interrupt", "defmt", "integrated-timers"] }
#embassy-time = { version = "0.3.0", git = "https://github.com/embassy-rs/embassy.git", features = ["defmt", "defmt-timestamp-uptime"] }
embassy-rp = { version = "0.2.0", git = "https://github.com/embassy-rs/embassy.git", features = ["defmt", "unstable-pac", "time-driver", "critical-section-impl", "rp2040"] }
embassy-usb = { version = "0.3.0", git = "https://github.com/embassy-rs/embassy.git", features = ["defmt"] }
embassy-net = { version = "0.4.0", git = "https://github.com/embassy-rs/embassy.git", features = ["defmt", "tcp", "udp", "raw", "dhcpv4", "medium-ethernet", "dns"] }
embassy-futures = { version = "0.1.0", git = "https://github.com/embassy-rs/embassy.git" }
embassy-usb-logger = { version = "0.2.0", git = "https://github.com/embassy-rs/embassy.git" }

defmt = "0.3"
defmt-rtt = "0.4"
fixed = "1.23.1"
fixed-macro = "1.2"


cortex-m = { version = "0.7.7", features = ["inline-asm"] }
cortex-m-rt = "0.7.3"
panic-probe = { version = "0.3", features = ["print-defmt"] }
futures = { version = "0.3.17", default-features = false, features = ["async-await", "cfg-target-has-atomic", "unstable"] }
heapless = "0.8"



embedded-hal-1 = { package = "embedded-hal", version = "1.0" }
embedded-hal-async = "1.0"
embedded-hal-bus = { version = "0.1", features = ["async"] }
embedded-io-async = { version = "0.6.1", features = ["defmt-03"] }
embedded-storage = { version = "0.3" }
static_cell = "2.1"
portable-atomic = { version = "1.5", features = ["critical-section"] }
log = "0.4"
pio-proc = "0.2"
pio = "0.2.1"
rand = { version = "0.8.5", features = ["small_rng"], default-features = false }

critical-section = "1.1"

# app deps


smart-leds = "0.4.0"
ws2812-pio = "0.8.0"
smart-leds-trait = "0.2.1"

#rp2040-hal = { version="0.10", features=["rt", "critical-section-impl"] }
#rp2040-boot2 = "0.2"
infrared = "0.14.2"
num-traits = { version = "0.2", default-features = false, features = ["libm"] }

capnp = { version = "0.19.6", default-features = false }
usbd-hid = "0.8.2"
#picoserve = { version = "0.12.2", features = ["embassy"] }
picoserve = { git="https://github.com/sammhicks/picoserve.git", default-features = false, features = ["embassy"] }


# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false

# do not optimize proc-macro crates = faster builds from scratch
[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
